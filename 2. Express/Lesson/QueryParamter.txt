const express = require('express')
const app = express()
const {products} = require('./Data')
//[] is array and {} is object
app.get('/',(request, response)=>{
    //response.json(products)
    response.send('<h1>Home Page</h1><a href="api/products">Products</a>')
})

app.get('/api/products',(request, response)=>{
    const newProducts = products.map((product)=>{
       const {id, name, image} = product
        return {id, name, image}
    })
    response.json(newProducts)
})

app.get('/api/products/:ProductID',(request, response)=>{
   const {ProductID} = request.params
   //Above code is string so we have to keep inside Number() function
    const singleProduct = products.find((product)=>product.id===Number(ProductID))
    if(!singleProduct){
        return response.status(404).send('Product doesn\'t exists')
    }
    response.json(singleProduct)
})

//We can also use multiple route param values
app.get('/api/products/:ProductID/reviews/:Review',(request, response)=>{
    response.send('Review will be posted soon')
})


app.get('/api/v1/query',(request, response)=>{
    const {search, limit} = request.query
    //It will send variables and values from URL as an object
    let sortedProducts = [...products]

    //Error
    if(search){
        sortedProducts = sortedProducts.filter((product)=>{
            return product.name.startsWith(search)
        })
    }
    //Error
    if(limit){
        sortedProducts = sortedProducts.slice(0, Number(limit))
    }
    //There will be case for empty array
    if(sortedProducts.length<1){
        return response.status(200).json({success: true, data: []})
    }
    //We cannot send two response in same one request so we have to use return
    response.status(200).json(sortedProducts)
})

app.listen(5000, ()=>{
    console.log('Server is listening on port 5000...')
})